{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ap\\\\Documents\\\\GitHub\\\\IGN Website\\\\Codefoo-Frontend\\\\ignweb\\\\src\\\\components\\\\MainPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport MainVideo from './MainVideo.js';\nimport QuedVideos from './QuedVideos';\nimport '../styles/mainpage.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MainPage() {\n  _s();\n\n  //There is a start index and count for pagnation\n  const [startIndex, setStartIndex] = useState(0);\n  const [count, setCount] = useState(5);\n  const [allVid, setAllVid] = useState([]); //This it to pass through values that we need for curr video player\n\n  const currVid = useRef({\n    urls: '',\n    title: '',\n    desc: ''\n  }); //Api call\n\n  const getVidAPI = async url => {\n    try {\n      const {\n        data\n      } = await axios.get(url);\n      return data;\n    } catch (e) {\n      console.log(e);\n    }\n  }; //Function for getting video data\n\n\n  const fetchVidData = () => {\n    getVidAPI(\"http://localhost:8080/?startIndex=\" + startIndex + \"&count=\" + count).then(_ref => {\n      let {\n        data\n      } = _ref;\n      currVid.current = {\n        urls: data[0].assets,\n        title: data[0].metadata.title,\n        desc: data[0].metadata.description\n      };\n      setAllVid(data);\n    });\n  }; //useEffect will only be called when startIndex is changed (when video is changed basically)\n\n\n  useEffect(() => {\n    fetchVidData();\n  }, [startIndex, count]);\n  console.log(allVid);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainpage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leftSide\",\n      children: /*#__PURE__*/_jsxDEV(MainVideo, {\n        startIndex: startIndex,\n        setStartIndex: setStartIndex,\n        urls: currVid.current.urls,\n        title: currVid.current.title,\n        desc: currVid.current.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightSide\",\n      children: /*#__PURE__*/_jsxDEV(QuedVideos, {\n        className: \"list\",\n        count: count,\n        setCount: setCount,\n        startIndex: startIndex,\n        setStartIndex: setStartIndex,\n        vidArr: allVid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bottom\",\n      children: /*#__PURE__*/_jsxDEV(QuedVideos, {\n        className: \"list\",\n        count: count,\n        setCount: setCount,\n        startIndex: startIndex,\n        setStartIndex: setStartIndex,\n        vidArr: allVid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MainPage, \"wTfoNLvhgNArR2Q0b9XxlQLLUYw=\");\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["C:/Users/Ap/Documents/GitHub/IGN Website/Codefoo-Frontend/ignweb/src/components/MainPage.js"],"names":["React","useState","useEffect","useRef","MainVideo","QuedVideos","axios","MainPage","startIndex","setStartIndex","count","setCount","allVid","setAllVid","currVid","urls","title","desc","getVidAPI","url","data","get","e","console","log","fetchVidData","then","current","assets","metadata","description"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\r\nimport MainVideo from './MainVideo.js';\r\nimport QuedVideos from './QuedVideos';\r\nimport '../styles/mainpage.css';\r\nimport axios from 'axios';\r\n\r\nfunction MainPage() {\r\n    //There is a start index and count for pagnation\r\n    const [startIndex, setStartIndex] = useState(0);\r\n    const [count, setCount] = useState(5);\r\n    const [allVid, setAllVid] = useState([]);\r\n\r\n    //This it to pass through values that we need for curr video player\r\n    const currVid = useRef({\r\n        urls:'',\r\n        title:'',\r\n        desc:'',\r\n\r\n    })\r\n\r\n\r\n\r\n    //Api call\r\n    const getVidAPI = async (url) => {\r\n        try{\r\n            const {data} = await axios.get(url);\r\n            return data;\r\n        } catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    //Function for getting video data\r\n    const fetchVidData = () => {\r\n        getVidAPI(\"http://localhost:8080/?startIndex=\"+ startIndex +\"&count=\"+ count)\r\n            .then(({data})=>{\r\n                currVid.current = {\r\n                    urls: data[0].assets,\r\n                    title: data[0].metadata.title,\r\n                    desc: data[0].metadata.description\r\n                };\r\n                setAllVid(data);\r\n            })\r\n    }\r\n\r\n    //useEffect will only be called when startIndex is changed (when video is changed basically)\r\n    useEffect(()=>{\r\n        fetchVidData()\r\n    }, [startIndex,count]) \r\n\r\n    console.log(allVid);\r\n\r\n    return ( \r\n        <div className='mainpage'>\r\n            <div className='leftSide'>\r\n                <MainVideo\r\n                    startIndex = {startIndex} setStartIndex = {setStartIndex}\r\n                    urls={currVid.current.urls}\r\n                    title= {currVid.current.title} \r\n                    desc={currVid.current.desc} \r\n                />\r\n\r\n            </div>\r\n            <div className='rightSide'>\r\n                <QuedVideos className = \"list\" count = {count} setCount = {setCount} startIndex = {startIndex} setStartIndex = {setStartIndex} vidArr = {allVid}/>\r\n            </div>\r\n\r\n            <div className='bottom'>\r\n                <QuedVideos className = \"list\" count = {count} setCount = {setCount} startIndex = {startIndex} setStartIndex = {setStartIndex} vidArr = {allVid}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainPage;"]},"metadata":{},"sourceType":"module"}